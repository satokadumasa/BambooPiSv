# Generated by Django 2.2.5 on 2019-09-17 09:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='タイトル')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='説明文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Album', verbose_name='アルバム')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='タイトル')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='説明文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('albums', models.ManyToManyField(through='bamboo.AlbumAttachment', to='bamboo.Album')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='タイトル')),
                ('body', models.TextField(blank=True, max_length=1000, null=True, verbose_name='本文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
            ],
        ),
        migrations.CreateModel(
            name='NotePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Note', verbose_name='ノート')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='タイトル')),
                ('body', models.TextField(blank=True, max_length=1000, null=True, verbose_name='本文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('notes', models.ManyToManyField(through='bamboo.NotePage', to='bamboo.Note')),
            ],
        ),
        migrations.CreateModel(
            name='Remark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True, max_length=1000, null=True, verbose_name='説明文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='タイトル')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='説明文')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='サイト名')),
                ('host_name', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='ホスト名')),
                ('port', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開ポート番号')),
                ('status', models.IntegerField(blank=True, default=0, null=True, verbose_name='公開状態')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
            ],
        ),
        migrations.CreateModel(
            name='UserRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Room', verbose_name='ノート')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='UserRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('remark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Remark', verbose_name='発言')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='UserPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Page', verbose_name='ページ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='UserNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Note', verbose_name='ノート')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='UserAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('attachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Attachment', verbose_name='添付ファイル')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='UserAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Album', verbose_name='アルバム')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Site', verbose_name='サイト')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ')),
            ],
        ),
        migrations.CreateModel(
            name='SiteRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Room', verbose_name='ルーム')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Site', verbose_name='サイト')),
            ],
        ),
        migrations.AddField(
            model_name='site',
            name='rooms',
            field=models.ManyToManyField(through='bamboo.SiteUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='site',
            name='users',
            field=models.ManyToManyField(through='bamboo.SiteRoom', to='bamboo.Room'),
        ),
        migrations.CreateModel(
            name='RoomRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='削除日時')),
                ('remark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Remark', verbose_name='発言')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Room', verbose_name='ルーム')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='rooms',
            field=models.ManyToManyField(through='bamboo.RoomRemark', to='bamboo.Room'),
        ),
        migrations.AddField(
            model_name='room',
            name='users',
            field=models.ManyToManyField(through='bamboo.UserRoom', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='remark',
            name='rooms',
            field=models.ManyToManyField(through='bamboo.RoomRemark', to='bamboo.Room'),
        ),
        migrations.AddField(
            model_name='remark',
            name='users',
            field=models.ManyToManyField(through='bamboo.UserRemark', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='users',
            field=models.ManyToManyField(through='bamboo.UserPage', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notepage',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Page', verbose_name='ページ'),
        ),
        migrations.AddField(
            model_name='note',
            name='pages',
            field=models.ManyToManyField(through='bamboo.NotePage', to='bamboo.Page'),
        ),
        migrations.AddField(
            model_name='note',
            name='users',
            field=models.ManyToManyField(through='bamboo.UserNote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='albumattachment',
            name='attachment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bamboo.Attachment', verbose_name='添付ファイル'),
        ),
        migrations.AddField(
            model_name='album',
            name='attachments',
            field=models.ManyToManyField(through='bamboo.AlbumAttachment', to='bamboo.Attachment'),
        ),
        migrations.AddField(
            model_name='album',
            name='users',
            field=models.ManyToManyField(through='bamboo.UserAlbum', to=settings.AUTH_USER_MODEL),
        ),
    ]
